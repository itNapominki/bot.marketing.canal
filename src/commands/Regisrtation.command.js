// @ts-check

const cacheService = require("../cache/CacheService");
const ChatHandle = require("../core/chats/chat-handle");
const Command = require("./command.class");

class RegisrtationCommand extends Command {
  constructor(bot) {
    super(bot);
  }

  handle() {
    this.bot.onText(/\/registration/, (msg) => {
      const chatId = msg.chat.id;

      if (msg.chat.type !== 'private') {
        this.requestMessage(chatId, `–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö. ${chatId}`);
        return;
      }  

     // new ChatHandle(this.bot).logoutChat(chatId);

      const options = {
        reply_markup: {
          keyboard: [
            [
              {
                text: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –ù–ê–ñ–ú–ò–¢–ï –°–Æ–î–ê üö®",
                request_contact: true,
              },
            ],
          ],
          one_time_keyboard: true,
        },
      };

      this.requestMessage(
        chatId,
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –ù–ê–ñ–ú–ò–¢–ï <<–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –Ω–∞–∂–º–∏—Ç–µ —Å—é–¥–∞>>:",
        options
      );

      return;
    });
  }
}

module.exports = RegisrtationCommand;
